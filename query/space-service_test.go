// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package query_test

import (
	. "github.com/onsi/ginkgo"
	. "github.com/onsi/gomega"
	. "github.com/mike-carey/change-all-stacks/query"
	"fmt"

	fakes "github.com/mike-carey/change-all-stacks/query/fakes"
)

var _ = Describe(fmt.Sprintf("%sService", getSpaceString()), func() {

	var (
		storage    *Storage
		fakeClient *fakes.FakeCFClient
		service    *SpaceService
	)

	BeforeEach(func() {
		storage = GetStorage()
		fakeClient = GetFakeClient(storage)
		service = NewSpaceService(fakeClient, GinkgoWriter)
	})

	It(fmt.Sprintf("Should get all %s", getSpaceString()), func() {
		items, err := service.GetAllSpaces()
		Expect(err).To(BeNil())
		Expect(items).Should(ConsistOf(storage.Spaces))
	})

	It(fmt.Sprintf("Should get %s by guid", getSpaceString()), func() {
		item, err := service.GetSpaceByGuid(fmt.Sprintf("%s-1", getSpaceString()))
		Expect(err).To(BeNil())
		Expect(item).Should(Equal(storage.Spaces[0]))
	})

	It(fmt.Sprintf("Should get %s by name", getSpaceString()), func() {
		item, err := service.GetSpaceByName(fmt.Sprintf("%s-1", getSpaceString()))
		Expect(err).To(BeNil())
		Expect(item).To(Equal(storage.Spaces[0]))
	})
})
