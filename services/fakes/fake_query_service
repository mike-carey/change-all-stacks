// Code generated by counterfeiter. DO NOT EDIT.
package fakes

import (
	"sync"

	cfclient "github.com/cloudfoundry-community/go-cfclient"
	"github.com/mike-carey/change-all-stacks/services"
)

type FakeQueryService struct {
	GetAllAppsStub        func(...string) ([]cfclient.App, error)
	getAllAppsMutex       sync.RWMutex
	getAllAppsArgsForCall []struct {
		arg1 []string
	}
	getAllAppsReturns struct {
		result1 []cfclient.App
		result2 error
	}
	getAllAppsReturnsOnCall map[int]struct {
		result1 []cfclient.App
		result2 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeQueryService) GetAllApps(arg1 ...string) ([]cfclient.App, error) {
	fake.getAllAppsMutex.Lock()
	ret, specificReturn := fake.getAllAppsReturnsOnCall[len(fake.getAllAppsArgsForCall)]
	fake.getAllAppsArgsForCall = append(fake.getAllAppsArgsForCall, struct {
		arg1 []string
	}{arg1})
	fake.recordInvocation("GetAllApps", []interface{}{arg1})
	fake.getAllAppsMutex.Unlock()
	if fake.GetAllAppsStub != nil {
		return fake.GetAllAppsStub(arg1...)
	}
	if specificReturn {
		return ret.result1, ret.result2
	}
	fakeReturns := fake.getAllAppsReturns
	return fakeReturns.result1, fakeReturns.result2
}

func (fake *FakeQueryService) GetAllAppsCallCount() int {
	fake.getAllAppsMutex.RLock()
	defer fake.getAllAppsMutex.RUnlock()
	return len(fake.getAllAppsArgsForCall)
}

func (fake *FakeQueryService) GetAllAppsCalls(stub func(...string) ([]cfclient.App, error)) {
	fake.getAllAppsMutex.Lock()
	defer fake.getAllAppsMutex.Unlock()
	fake.GetAllAppsStub = stub
}

func (fake *FakeQueryService) GetAllAppsArgsForCall(i int) []string {
	fake.getAllAppsMutex.RLock()
	defer fake.getAllAppsMutex.RUnlock()
	argsForCall := fake.getAllAppsArgsForCall[i]
	return argsForCall.arg1
}

func (fake *FakeQueryService) GetAllAppsReturns(result1 []cfclient.App, result2 error) {
	fake.getAllAppsMutex.Lock()
	defer fake.getAllAppsMutex.Unlock()
	fake.GetAllAppsStub = nil
	fake.getAllAppsReturns = struct {
		result1 []cfclient.App
		result2 error
	}{result1, result2}
}

func (fake *FakeQueryService) GetAllAppsReturnsOnCall(i int, result1 []cfclient.App, result2 error) {
	fake.getAllAppsMutex.Lock()
	defer fake.getAllAppsMutex.Unlock()
	fake.GetAllAppsStub = nil
	if fake.getAllAppsReturnsOnCall == nil {
		fake.getAllAppsReturnsOnCall = make(map[int]struct {
			result1 []cfclient.App
			result2 error
		})
	}
	fake.getAllAppsReturnsOnCall[i] = struct {
		result1 []cfclient.App
		result2 error
	}{result1, result2}
}

func (fake *FakeQueryService) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.getAllAppsMutex.RLock()
	defer fake.getAllAppsMutex.RUnlock()
	copiedInvocations := map[string][][]interface{}{}
	for key, value := range fake.invocations {
		copiedInvocations[key] = value
	}
	return copiedInvocations
}

func (fake *FakeQueryService) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ services.QueryService = new(FakeQueryService)
